<template>
  <div class="DialogStockWrap">
    <el-dialog
      title="出库"
      :visible.sync="dialogOutStockVisible"
      width="768px">
      <div class="stock-mian">
        <div class="panel-wrap">
          <h4 class="dialog-h3">申请信息</h4>
          <el-form :rules="rules" ref="outStockFormData" :label-position="labelPosition" :model="outStockFormData" label-width="80px">
            <el-form-item label="申请类型:"  class="el-form-item-first" required>
              <el-radio-group v-model="outStockFormData.applyType" @change="changeTipsClose">
                <el-radio  v-for="item of applyTypeList" :key="item.value" :label="item.value">{{item.label}}</el-radio>
              </el-radio-group>
            </el-form-item>
            <el-row :gutter="20">
              <el-col :span="8" v-if="showButton([0,1,2],outStockFormData.applyType) ">
                <el-form-item label="申请人:" prop="applyerPerson">
                  <el-input v-model="outStockFormData.applyerPerson" placeholder="申请人"></el-input>
                </el-form-item>
              </el-col>
              <el-col :span="8"  v-if="showButton([0],outStockFormData.applyType) ">
                <el-form-item label="运营中心:" prop="orgName">
                  <el-select v-model="outStockFormData.orgName" placeholder="请选择">
                    <el-option
                      v-for="item of orgList"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
              </el-col>
              <el-col :span="8"  v-if="showButton([0],outStockFormData.applyType) ">
                <el-form-item label="申请单位:" prop="unitName">
                  <el-select v-model="outStockFormData.unitName" placeholder="请选择">
                    <el-option
                      v-for="item of unitList"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
              </el-col>
              <el-col :span="8"  v-if="showButton([1,2],outStockFormData.applyType) ">
                <el-form-item label="申请项目:"  prop="applyProject">
                  <el-input v-model="outStockFormData.applyProject" placeholder="申请项目"></el-input>
                </el-form-item>
              </el-col>
            </el-row>
          </el-form>
        </div>
        <div class="panel-wrap">
          <h4 class="dialog-h3">出库硬件列表</h4>
          <div class="list-wrap">
            <el-table :data="tableData" stripe style="width: 100%" max-height="200px">
              <el-table-column prop="deviceId" label="硬件Id" min-width="10%"></el-table-column>
              <el-table-column prop="deviceName" label="硬件名称" min-width="15%"></el-table-column>
              <el-table-column prop="deviceTypeName" label="硬件类型" min-width="15%"></el-table-column>
              <el-table-column prop="factory" label="厂家" min-width="10%"></el-table-column>
              <el-table-column prop="brand" label="品牌型号" min-width="10%"></el-table-column>
            </el-table>
          </div>
        </div>
      </div>

      <span slot="footer" class="dialog-footer">
        <el-button @click="cancelHandel()">取 消</el-button>
        <el-button type="primary" @click="submitHandel()">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>
<script>
  export default {
    data() {
      return {
        dialogOutStockVisible: false, //出库
        labelPosition:'top',//对齐方式
        outStockFormData:{//表单data
          applyType:0,
          applyProject:'',
          applyerPerson:'',
          orgName:'',
          unitName:'',
        },
        orgList:[{//运营中心列表
          label:'运营中心01',
          value:'value01'
        }],
        unitList:[{//申请单位列表
          label:'单位名称01',
          value:'value01'
        }],
        applyTypeList:[{
          value:0,
          label:'运营中心'
        },{
          value:1,
          label:'企业'
        },{
          value:2,
          label:'其它'
        }],
        tableData: [{
          deviceId: '110',
          deviceName: 'test_device_001',
          deviceTypeName: '多线盘1',
          factory:'测试',
          brand:'乐鸟'
        }, {
          deviceId: '111',
          deviceName: 'test_device_002',
          deviceTypeName: '多线盘2',
          factory:'测试',
          brand:'乐鸟'
        }, {
          deviceId: '112',
          deviceName: 'test_device_003',
          deviceTypeName: '多线盘3',
          factory:'测试',
          brand:'乐鸟'
        }, {
          deviceId: '113',
          deviceName: 'test_device_004',
          deviceTypeName: '多线盘4',
          factory:'测试',
          brand:'乐鸟'
        }],
        rules:{
          applyerPerson:[
            { required: true, message: '申请人不能为空', trigger: 'blur' }
          ],
          orgName:[
            { required: true, message: '运营中心不能为空', trigger: 'change' },
          ],
          applyProject:[
            { required: true, message: '申请项目不能为空', trigger: 'change' },
          ]
        }
      };
    },
    mounted() {
      const that = this;

    },
    computed: {},
    methods: {
      initOutStock(){
        this.dialogOutStockVisible=true;
      },
      /**
       * 类型申请显示
       * @param arr
       * @param value
       * @returns {boolean}
       */
      showButton(arr, value) {
        const that= this;
        if(value === 0){
          that.outStockFormData.applyProject =''
        }
        if(value === 1 || value === 2){
          that.outStockFormData.orgName =''
          that.outStockFormData.unitName =''
        }
        return arr.indexOf(value*1) > -1;
      },
      /**
       * 出库确定按钮
       */
      submitHandel(){
        const that = this;
        that.isLoading = true;
        that.$refs.outStockFormData.validate((valid) => {
          if (valid) {
            that.$axios
              .$POST({
                api_name: "putOutRepository",//出库接口
                params: {
                  applyType: that.outStockFormData.applyType,
                  applyPerson: that.outStockFormData.applyPerson,
                  applyOrg: that.outStockFormData.orgName,
                  orgCode: that.outStockFormData.orgCode,
                  applyUnit: that.outStockFormData.unitName,
                  applyProject:that.outStockFormData.applyProject,
                  deviceIds:'',//要出库的设备主键id,多个之间使用逗号进行分隔
                  userId:''//当前操作人id， 暂时没有登录 为空
                }
              })
              .then(res => {
                that.isLoading = false;
                if (res.data.code == "success") {
                  that.isLoading = false;
                  that.dialogOutStockVisible = false
                  that.$message({
                    message: res.data.rspMsg,
                    type: 'success'
                  });
                  that.$emit('sureHandel');//父组件调用方法刷新列表
                } else {
                  that.isLoading = false;
                  that.$message.error(res.data.rspMsg);
                }
              }).catch(()=>{
              this.$message({
                message: '这里是异常',
                type: 'warning'
              });
            });
          } else {
            console.log('error submit!!');
            return false;
          }
        });

      },
      /**
       * 出库取消按钮
       */
      cancelHandel(){
        const that = this;
        that.outStockFormData={
          applyType:0,
          applyProject:'',
          applyerPerson:'',
          orgName:'',
          unitName:'',
        }
        that.dialogOutStockVisible = false
      },
      /**
       * 切换时提示关闭
       */
      changeTipsClose(){
        const that = this;
        that.dialogVisible = false;
        that.$nextTick(() => {
          that.plan={}
          that.$refs["outStockFormData"].resetFields();
        });
      },
    }
  };
</script>
<style lang="scss" scoped="scoped">
  .DialogStockWrap{
    font-family:MicrosoftYaHei;
    .panel-wrap{
      margin-top: 16px;
      .dialog-h3{
        font-size:18px;
        color:rgba(37,40,46,1);
        font-weight:400;
        padding: 12px 0;
        border-bottom: 1px solid rgba(225,229,235,1);
      }
      /deep/.el-form--label-top{
        .el-form-item-first{
          margin-bottom: 0;
        }
        .el-form-item__label{
          padding: 0;
          color:#525C66;
          font-size: 16px;
        }
        .el-radio__label{
          font-size: 16px;
          font-weight:400;
          /*color: rgba(37,40,46,1);*/
        }
        .el-select{
          width: 100%;
        }
      }

    }
  }
  .list-wrap {
    margin-top: 12px;
    /deep/.el-table {
      padding: 0;
      overflow: hidden;
      th {
        background: rgba(240, 243, 247, 1);
      }
      .el-table__body-wrapper {
        overflow-y: auto;
      }
    }
    /*.el-checkbox{ margin-top: 6px;}*/
  }
</style>
