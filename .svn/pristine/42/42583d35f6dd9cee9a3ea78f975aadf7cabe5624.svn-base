<template>
  <div>
    <div class="Crumbs">
      <el-breadcrumb separator-class="el-icon-arrow-right">
        <el-breadcrumb-item :to="{ path: '/' }">硬件平台</el-breadcrumb-item>
        <el-breadcrumb-item>附件管理</el-breadcrumb-item>
      </el-breadcrumb>
    </div>
    <div class="main-wrap">
      <el-row class="location">
        <el-col :span="12">
          <h3>附件管理</h3>
        </el-col>
      </el-row>
      <div class="main-container">
        <!-- 查询 -->
        <el-form :inline="true" :model="formData" ref="formData" class="hardware-form">
          <el-form-item label="附件ID:" label-width="80px">
            <el-input placeholder="请输入" v-model="formData.attachmentId"></el-input>
          </el-form-item>
          <el-form-item label="附件名称:"  label-width="">
            <el-input placeholder="请输入" v-model="formData.attachmentName"></el-input>
          </el-form-item>
          <el-form-item label="创建时间:"  label-width="">
            <el-input placeholder="请输入" v-model="formData.createTime"></el-input>
          </el-form-item>
          <el-form-item label=" ">
            <el-button type="primary" size="small" @click="lookFor()">查询</el-button>
            <el-button size="small" @click="reset('formData')">重置</el-button>
          </el-form-item>
        </el-form>
        <!-- 列表 -->
        <div class="list-wrap">
          <el-table v-loading.lock="isLoading" :data="tableData" stripe show-overflow-tooltip>
            <el-table-column label="附件ID" prop="deviceId" show-overflow-tooltip ></el-table-column>
            <el-table-column label="附件名称" prop="unitName" show-overflow-tooltip></el-table-column>
            <el-table-column label="创建人" prop="deviceAddress" show-overflow-tooltip></el-table-column>
            <el-table-column label="创建时间" prop="deviceName" show-overflow-tooltip></el-table-column>
            <el-table-column label="备注" prop="deviceTypeName" show-overflow-tooltip></el-table-column>
            <el-table-column label="操作" show-overflow-tooltip align="center">
              <template slot-scope="scope">
                <el-link type="primary" @click="deleteAttachment(scope.row, scope.$index)">删除</el-link>
                <el-link type="primary" @click="downloadAttachment(scope.row, scope.$index)">下载</el-link>
              </template>
            </el-table-column>
          </el-table>
          <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />
        </div>
      </div>
    </div>
    
  </div>
</template>
<script>
import Pagination from "~/components/Pagination";
export default {
  components: {
    Pagination
  },

  data() {
    return {
      isLoading: false,
      formData: {}, //查询的formData
      tableData: [], //table查询结果
      loading: true,
      widgetInfo: {
        pageSize: 10,
        pageNo: 1,
        total: 0,
      },
      dialogTableVisible: false,
      recordData: []
    }
  },
  mounted() {
  },
  computed: {
  },
  methods: {
  	
    // 硬件类别管理的列表
    getEquipmentListPage() {
      const that = this;
      that.isLoading = true;
      that.$axios.$POST({
        api_name: "findProjectDeviceList",
        params: {
          deviceId: that.formData.deviceId,
          //subCenterCode: that.formData.subCenterCode,
          subCenterCode: "340100YYZX201805230001",
          unitId: that.formData.unitId,
          controlHost: that.formData.controlHost,
          deviceName: that.formData.deviceName,
          deviceTypeName: that.formData.deviceTypeName,
          onlineState: that.formData.onlineState,
          pageNo: that.widgetInfo.pageNo,
          pageSize: that.widgetInfo.pageSize,
        }
      }).then(res => {
        if (res.data.code == 'success') {
          that.isLoading = false;
          let data = res.data.data;
          that.tableData = data.rows;
          that.widgetInfo.total = data.total === null ? 0 : data.total;
        } else {
          that.tableData = [];
          that.widgetInfo.list = data.rows;
          that.widgetInfo.total = 0;
          console.log('没有数值。。。。。')
        }

      })

    },

    //分页
    sonHandleCurrentChange(widgetInfo) {
      this.widgetInfo.pageSize = (widgetInfo.pageSize ? parseInt(widgetInfo.pageSize) : this.widgetInfo.pageSize);
      this.widgetInfo.pageNo = (widgetInfo.pageNo ? parseInt(widgetInfo.pageNo) : this.widgetInfo.pageNo);
      this.getEquipmentListPage();
    },
    reset(formName) {//重置
      this.formData = {};
      this.getEquipmentListPage();
    },
    lookFor() {//查询
      this.getEquipmentListPage();
    }
  },


}
</script>
<style lang="scss" scoped="scoped">
	.record-table{
		height: 400px;
	}
	
  .add-btn-style{
    text-align: right;
    padding-right: 25px;
    box-sizing: border-box;
  }
.list-wrap {
  //导航90px 面包屑64px 距离底部20px 面板标题65px 查询form表单76
  height: calc(100vh - 90px - 64px - 20px - 65px - 132px);
  overflow-y: scroll;
  width: 100%;
  .el-table{
    padding: 0;
    overflow: hidden;
    th {
      background: rgba(240, 243, 247, 1);
    }
    .el-table__body-wrapper {
      //导航90px 面包屑64px 距离底部20px 面板标题65px 查询form表单76 分页85 头部高度48px
      height: calc(100vh - 90px - 64px - 20px - 65px - 76px - 85px - 48px);
      overflow-y: auto;
    }
  }
}
.hardware-form .el-form-item{
	width: 23%;
}
.hardware-form{
	padding-left: 25px;
}
</style>
<style type="text/css">
	.el-scrollbar__wrap{
		overflow-x: hidden;
	}
</style>
