<!--
 * @Descripttion: 出入库记录
 * @version: 
 * @Author: yangxq
 * @Date: 2019-07-02 15:52:31
 * @LastEditors: sueRimn
 * @LastEditTime: 2019-08-14 13:57:27
 -->


<template>
  <div>
    <div class="Crumbs">
      <el-breadcrumb separator-class="el-icon-arrow-right">
        <el-breadcrumb-item>硬件平台</el-breadcrumb-item>
        <el-breadcrumb-item>出入库记录</el-breadcrumb-item>
      </el-breadcrumb>
    </div>
    <div class="main-wrap">
      <div class="location">出入库记录</div>
      <div class="main-container">
        <!-- 查询 -->
        <el-form :inline="true" :model="serchForm" ref="serchForm" class="hardware-form">
          <el-form-item class="recordType" label="类型:" prop="recordType" :label-width="labelWidth">
            <el-select placeholder="请选择" filterable v-model.trim="serchForm.recordType" clearable>
              <el-option
                v-for="item in types"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item
            class="oprationUser"
            label="操作人:"
            prop="oprationUser"
            :label-width="labelWidth"
          >
            <el-input v-model.trim="serchForm.oprationUser"></el-input>
          </el-form-item>
          <el-form-item class="DataSelect" label="操作时间:" prop="time" :label-width="labelWidth">
            <el-date-picker
              v-model.trim="serchForm.DataSelect"
              type="datetimerange"
              range-separator=" 至"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
            ></el-date-picker>
          </el-form-item>
          <el-form-item label class="serch-btn" style="width:20%">
            <el-button type="primary" size="small" @click="serch()">查询</el-button>
            <el-button size="small" @click="rest('serchForm')">重置</el-button>
          </el-form-item>
        </el-form>

        <!-- 列表 -->
        <div class="list-wrap">
          <el-table v-loading.lock="isLoading" :data="tableData" show-overflow-tooltip>
            <el-table-column label="序号" type="index" align="center" width="70px"></el-table-column>
            <el-table-column label="申请信息" show-overflow-tooltip align="left" min-width="30%">
              <template slot-scope="scope">
                <div>
                  <p>
                    <span class="scope-span">
                      申请类型：{{transform(scope.row.applyType, applyTypes) || '--'
                      }}
                    </span>
                    <span
                      class="scope-span"
                      v-if="scope.row.applyType==1 || scope.row.applyType==2"
                    >申请项目：{{scope.row.applyProject || '--'}}</span>
                    <span
                      class="scope-span"
                      v-if="scope.row.applyType==0"
                    >运营中心：{{scope.row.applyOrg || '--'}}</span>
                  </p>
                  <p>
                    <span
                      class="scope-span"
                      v-if="scope.row.applyType==0"
                    >业主单位：{{scope.row.applyUnit || '--'}}</span>
                    <span class="scope-span">申请人：{{scope.row.applyPerson || '--'}}</span>
                  </p>
                </div>
              </template>
            </el-table-column>
            <el-table-column
              label="涉及金额/元"
              prop="totalAmount"
              show-overflow-tooltip
              align="left"
              min-width="10%"
            ></el-table-column>
            <el-table-column
              label="类型"
              prop="recordType"
              show-overflow-tooltip
              align="left"
              min-width="10%"
            >
              <template slot-scope="scope">
                <span>{{transform(scope.row.recordType, types) }}</span>
              </template>
            </el-table-column>
            <el-table-column
              label="操作时间"
              prop="createTime"
              show-overflow-tooltip
              align="left"
              min-width="15%"
            ></el-table-column>
            <el-table-column
              label="操作人"
              prop="createUserName"
              show-overflow-tooltip
              align="left"
              min-width="10%"
            ></el-table-column>
            <el-table-column label="操作" min-width="10%" show-overflow-tooltip align="center">
              <template slot-scope="scope">
                <div>
                  <el-link type="primary" @click="look(scope.row.id)">设备信息</el-link>
                </div>
              </template>
            </el-table-column>
          </el-table>
        </div>
        <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />
      </div>
    </div>
    <el-dialog title="设备信息" :visible.sync="dialogFormVisible" width="1020px">
      <div class="deviceInfoList-wrap" id="deviceInfoList_wrap">
        <el-table
          :data="deviceInfoList"
          class="deviceInfoList-table"
          v-loading.lock="dialogIsLoading"
        >
          <el-table-column label="序号" prop="deviceName" type="index" align="left" min-width="5%"></el-table-column>
          <el-table-column label="硬件ID" prop="id" align="left" min-width="8%"></el-table-column>
          <el-table-column label="硬件名称" prop="deviceName" align="left" min-width="8%"></el-table-column>
          <el-table-column label="序列号" prop="serialNumber" align="left" min-width="7%"></el-table-column>
          <el-table-column label="硬件类型" prop="deviceTypeName" align="left" min-width="10%"></el-table-column>
          <el-table-column label="厂家" prop="factory" align="left" min-width="10%"></el-table-column>
          <el-table-column label="型号" prop="model" align="left" min-width="7%"></el-table-column>
          <el-table-column label="供应商" prop="supplier" align="left" min-width="8%"></el-table-column>
          <el-table-column label="单价/计量单位" prop="deviceId" align="left" min-width="13%">
            <template slot-scope="scope">{{scope.row.price}}元/{{scope.row.measurementUnit}}</template>
          </el-table-column>
        </el-table>
      </div>
      <Pagination1 :widgetInfo="widgetInfo1" v-on:sonHandleCurrentChange="sonHandleCurrentChange1" />
    </el-dialog>
  </div>
</template>

<script>
import Pagination from "~/components/Pagination";
import Pagination1 from "~/components/Pagination";
export default {
  components: {
    Pagination,
    Pagination1
  },
  data() {
    return {
      isLoading: false,
      dialogIsLoading: false,
      dialogFormVisible: false,
      deviceInfoList: [],
      labelWidth: "100px",
      types: [
        { value: "0", label: "仓库入库" },
        { value: "1", label: "直发采购入库" },
        { value: "2", label: "回退入库" },
        { value: "3", label: "仓库出库" },
        { value: "4", label: "直发采购出库" },
        { value: "5", label: "销库出库" }
      ],
      applyTypes: [
        { value: null, label: "无" },
        { value: 0, label: "运营中心" },
        { value: 1, label: "企业项目" },
        { value: 2, label: "其他" }
      ],
      serchForm: {
        recordType: "",
        oprationUser: "",
        DataSelect: "",
        beginDate: "",
        endDate: ""
      },
      tableData: [],
      widgetInfo: {
        pageSize: 10,
        pageNo: 1,
        total: 0
      },
      widgetInfo1: {
        pageSize: 10,
        pageNo: 1,
        total: 0
      },
      val:'',
    };
  },
  mounted() {},
  methods: {
    getTableData() {
      this.isLoading = true;
      this.$axios
        .$POST({
          api_name: "getRopositoryRecordPage",
          params: {
            oprationUser: this.serchForm.oprationUser,
            recordType: this.serchForm.recordType,
            beginDate: this.serchForm.beginDate,
            endDate: this.serchForm.endDate,
            pageNo: this.widgetInfo.pageNo,
            pageSize: this.widgetInfo.pageSize
          }
        })
        .then(res => {
          if (res.data.code == "success") {
            this.isLoading = false;
            var data = res.data.data;
            this.tableData = data.rows;
            this.widgetInfo.total = data.total === null ? 0 : data.total;
          } else {
            this.tableData = [];
            this.widgetInfo.list = res.data.rows;
            this.widgetInfo.total = 0;
            console.log("没有数值。。。。。");
          }
        });
    },
    getDeviceByRecordId(recordId) {
      let that = this;
      that.dialogIsLoading = true;
      that.deviceInfoList = [];
      that.$axios
        .$POST({
          api_name: "getDeviceByRecordId",
          params: {
            recordId: recordId
          }
        })
        .then(res => {
          if (res.data.code == "success") {
            that.dialogIsLoading = false;
            var data = res.data.data;
            that.deviceInfoList = data.rows;
            that.widgetInfo1.total = data.total === null ? 0 : data.total;
          } else {
            that.deviceInfoList = [];
            that.widgetInfo1.list = res.data.rows;
            that.widgetInfo1.total = 0;
            console.log("没有数值。。。。。");
          }
        });
    },
    look(recordId) {
      let that = this;
      that.dialogFormVisible = true;
      that.val = recordId;
      that.widgetInfo1={
          pageSize: 10,
          pageNo: 1,
          total: 0
      },
        that.getDeviceByRecordId(that.val);
    },
    transform(key, list) {
      //类型转化
      return list.find(item => item.value == key).label;
    },
    serch() {
      var startTime = this.serchForm.DataSelect[0];
      var endTime = this.serchForm.DataSelect[1];
      this.widgetInfo.pageNo = 1;
      this.formatData();
      if (
        //开始时间
        null != startTime &&
        startTime instanceof Date
      ) {
        startTime = startTime.format("yyyy-MM-dd hh:mm:ss");
      }
      if (
        //结束时间
        null != endTime &&
        endTime instanceof Date
      ) {
        endTime = endTime.format("yyyy-MM-dd hh:mm:ss");
      }

      if (this.serchForm.DataSelect == "") {
        this.serchForm.beginDate = "";
        this.serchForm.endDate = "";
      } else {
        // --时间处理
        this.serchForm.beginDate = startTime;
        this.serchForm.endDate = endTime;
      }
      this.getTableData();
    },
    rest(formName) {
      this.$refs[formName].resetFields();
      this.serchForm.DataSelect = "";
      this.serchForm.beginDate = "";
      this.serchForm.endDate = "";
      this.widgetInfo.pageNo = 1;
      this.getTableData();
    },
    formatData() {
      Date.prototype.format = function(fmt) {
        var o = {
          "M+": this.getMonth() + 1, //月份
          "d+": this.getDate(), //日
          "h+": this.getHours(), //小时
          "m+": this.getMinutes(), //分
          "s+": this.getSeconds(), //秒
          "q+": Math.floor((this.getMonth() + 3) / 3), //季度
          S: this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) {
          fmt = fmt.replace(
            RegExp.$1,
            (this.getFullYear() + "").substr(4 - RegExp.$1.length)
          );
        }
        for (var k in o) {
          if (new RegExp("(" + k + ")").test(fmt)) {
            fmt = fmt.replace(
              RegExp.$1,
              RegExp.$1.length == 1
                ? o[k]
                : ("00" + o[k]).substr(("" + o[k]).length)
            );
          }
        }
        return fmt;
      };
    },
    sonHandleCurrentChange(widgetInfo) {
      //分页
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      this.getTableData();
    },
    sonHandleCurrentChange1(widgetInfo) {
      //分页
      this.widgetInfo1.pageSize = widgetInfo.pageSize ? parseInt(widgetInfo.pageSize) : this.widgetInfo1.pageSize;
      this.widgetInfo1.pageNo = widgetInfo.pageNo ? parseInt(widgetInfo.pageNo) : this.widgetInfo1.pageNo;
      this.getDeviceByRecordId(this.val);
    }
  }
};
</script>

<style lang="scss" scoped>
@import "~/assets/css/list.scss";
.main-wrap {
  /deep/.el-table {
    .el-icon-arrow-right {
      font-size: 17px;
      font-weight: bold;
      color: #b7b5b5;
    }
    .scope-span {
      margin-right: 15px;
    }
    .el-table__expanded-cell[class*="cell"] {
      padding: 0;

      th {
        background: #e7eaef;
      }

      tr {
        background: rgba(245, 247, 252, 1);
      }
    }
  }
  /deep/.el-form {
    .el-form-item {
      width: 20%;
      &.DataSelect {
        width: 30%;
        .el-date-editor .el-range__icon,
        .el-date-editor .el-range__close-icon {
          display: none;
        }
        .el-date-editor .el-range-input {
          width: 100%;
        }
      }
    }
    .el-form-item__content {
      width: calc(100% - 100px);
    }
  }
}
.deviceInfoList-wrap {
  /deep/.el-table {
    .el-table__body-wrapper {
      height: auto;
      min-height: 250px;
      overflow-y: auto;
    }
  }
}
/deep/.el-dialog__wrapper {
  overflow: hidden;
}
@media screen and (max-width: 1680px) {
  .main-wrap {
    /deep/.el-form {
      .el-form-item {
        &.DataSelect {
          width: 40%;
        }
      }
    }
  }
}
</style>
