<template>
  <div class="downlinkControlRecord">
    <div class="list-wrap">
      <el-table v-loading.lock="isLoading" :data="tableData" stripe show-overflow-tooltip>
        <el-table-column label="下行时间" prop="createdTime" show-overflow-tooltip />
        <el-table-column label="操作人" prop="createdBy" show-overflow-tooltip />
        <el-table-column label="返回结果" prop="returnResult" show-overflow-tooltip />
        <el-table-column label="变更前后参数" show-overflow-tooltip align="center">
          <template slot-scope="scope" v-show="scope.row.onlineState==1">
            <div>
              <el-link type="primary" @click="look(scope.$index,scope.row)">查看</el-link>
            </div>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />

    <el-dialog title="变更前后参数" :visible.sync="outerVisible" :width="dialogWidth">
      <div :class="['parameter-wrap',{ bjlnUDP: sourceId=='bjlnUDP' } ]">
        <div class="block before">
          <h3>
            <span>变更前</span>
          </h3>
          <div class="parameter-box">
            <downlineRecordBjlnUDP
              :BjlnUDP="BjlnUDPBeforeChangeData"
              v-if="loadSurvey && sourceId=='bjlnUDP'"
            />
            <downlineRecordHnla
              :key="menuKey"
              :HnlaData="HnlaBeforeChangeData"
              v-if="loadSurvey && sourceId!='bjlnUDP'"
            />
          </div>
        </div>
        <div class="line"></div>
        <div class="block after">
          <h3>
            <span>变更后</span>
          </h3>
          <div class="parameter-box">
            <downlineRecordBjlnUDP
              :BjlnUDP="BjlnUDPAfterChangeData"
              v-if="loadSurvey && sourceId=='bjlnUDP'"
            />
            <downlineRecordHnla
              :key="menuKey"
              :HnlaData="HnlaAfterChangeData"
              v-if="loadSurvey && sourceId!='bjlnUDP'"
            />
          </div>
        </div>
        <div style="clear:both"></div>
        <div class="mask"></div>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import Pagination from "~/components/Pagination";
import downlineRecordHnla from "~/components/downlineRecordHnla";
import downlineRecordBjlnUDP from "~/components/downlineRecordBjlnUDP";

export default {
  components: {
    Pagination,
    downlineRecordHnla,
    downlineRecordBjlnUDP
  },
  data() {
    return {
      isLoading: false,
      dialogWidth: "600px",
      sourceId: "",
      tableData: [],
      menuKey: 0,
      outerVisible: false,
      HnlaData: [],
      BjlnUDP: [],
      HnlaBeforeChangeData: [],
      HnlaAfterChangeData: [],
      BjlnUDPBeforeChangeData: [],
      BjlnUDPAfterChangeData: [],
      widgetInfo: {
        pageSize: 10,
        pageNo: 1,
        total: 0
      },
      loadSurvey: false
    };
  },
  computed: {
    fromParent() {
      return this._Storage.getObj("downListRow", "obj");
    }
  },
  mounted() {
    this.sourceId = this.fromParent.sourceId;
    if (this.fromParent.sourceId == "bjlnUDP") {
      this.dialogWidth = "800px";
    } else {
      this.dialogWidth = "600px";
    }
  },
  watch: {
    menuKey() {
      this.menuKey++;
    }
  },
  methods: {
    getTableData() {
      this.isLoading = true;
      this.$axios
        .$POST({
          api_name: "findHardwareDeviceControlRecordList",
          params: {
            controlHost: this.fromParent.controlHost,
            sourceId: this.fromParent.sourceId,
            pageNo: this.widgetInfo.pageNo,
            pageSize: this.widgetInfo.pageSize
          }
        })
        .then(res => {
          if (res.data.code == "success") {
            this.isLoading = false;
            var data = res.data.data;
            this.tableData = data.rows;
            this.widgetInfo.total = data.total === null ? 0 : data.total;
          } else {
            this.tableData = [];
            this.widgetInfo.list = res.data.rows;
            this.widgetInfo.total = 0;
            console.log("没有数值。。。。。");
          }
        });
    },
    handleClose(done) {
      this.$confirm("确认关闭？")
        .then(_ => {
          done();
        })
        .catch(_ => {});
    },
    look(index, row) {
      this.outerVisible = true;
      this.HnlaBeforeChangeData = [];
      this.HnlaAfterChangeData = [];
      this.BjlnUDPBeforeChangeData = [];
      this.BjlnUDPAfterChangeData = [];
      console.log(row.beforeChangeData);
      if (this.fromParent.sourceId === "hnla")
        if (row.beforeChangeData) {
          this.HnlaBeforeChangeData = JSON.parse(row.beforeChangeData);
        }
      if (row.afterChangeData) {
        this.HnlaAfterChangeData = JSON.parse(row.afterChangeData);
      }
      if (this.fromParent.sourceId === "bjlnUDP")
        if (row.beforeChangeData) {
          this.BjlnUDPBeforeChangeData = JSON.parse(row.beforeChangeData);
        }
      if (row.afterChangeData) {
        this.BjlnUDPAfterChangeData = JSON.parse(row.afterChangeData);
      }
      this.loadSurvey = false;
      this.$nextTick(() => {
        this.loadSurvey = true;
      });
    },
    sonHandleCurrentChange(widgetInfo) {
      //分页
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      this.getTableData();
    }
  }
};
</script>
<style lang="scss" scoped>
@import "~/assets/css/list.scss";
.list-wrap {
  /deep/.el-table {
    .el-table__body-wrapper {
      height: calc(100vh - 90px - 64px - 20px - 65px - 76px - 35px);
    }
  }
}
/deep/.el-dialog__wrapper .el-dialog__body {
  max-height: 550px;
}
.parameter-wrap {
  position: relative;
  .red {
    color: red;
  }
  .block {
    display: inline-block;
    width: 240px;
    margin-left: 20px;

    &.after {
      margin-left: 40px;
    }
    h3 {
      text-align: center;
      font-weight: 400;
      color: rgba(28, 119, 255, 1);
      margin: 10px 0;
      span {
        padding-bottom: 5px;
        display: inline-block;
        border-bottom: 2px solid rgba(28, 119, 255, 1);
      }
    }
  }
  .parameter-box-item {
    padding: 5px 10px;
    font-size: 16px;
    font-family: MicrosoftYaHei;
    font-weight: 400;
    color: #a5adb8;
    .number {
      color: #25282e;
    }
  }
  .line {
    position: absolute;
    width: 1px;
    left: 262px;
    top: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.16);
  }
}
.parameter-wrap.bjlnUDP {
  .red {
    color: red;
  }
  .block {
    float: left;
    width: 340px;
    &.before {
      width: 340px;
    }
    &.after {
    }
    h3 {
      span {
      }
    }
  }
  .parameter-box-item {
    .number {
    }
  }
  .line {
    left: 350px;
  }
}
.mask {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 9999;
  top: 0;
  bottom: 0;
  left: 0;
}
@media screen and (max-width: 1680px) {
  .list-wrap {
    /deep/.el-table {
      .el-table__body-wrapper {
        //导航90px 面包屑64px 距离底部20px 面板标题65px 查询form表单76 分页85 头部高度48px
        height: calc(100vh - 90px - 64px - 20px - 65px - 76px - 15px);
      }
    }
  }
}
</style>