<template>
  <div>
    <div class="Crumbs">
      <el-breadcrumb separator-class="el-icon-arrow-right">
        <el-breadcrumb-item :to="{ path: '/' }">硬件平台</el-breadcrumb-item>
        <el-breadcrumb-item>硬件类型</el-breadcrumb-item>
      </el-breadcrumb>
    </div>
    <div class="main-wrap">
      <el-row class="location">
        <el-col :span="12">
          <h3>硬件类型</h3>
        </el-col>
        <el-col :span="12" class="add-btn-style">
          <el-button type="success" icon="el-icon-plus" @click="addOrEditDiglog('new')">新增</el-button>
        </el-col>
      </el-row>
      <div class="main-container">
        <!-- 查询 -->
        <el-form :inline="true" :model="formData" ref="formData" class="hardware-form">
          <el-form-item label="ID:" label-width="30px">
            <el-input placeholder="请输入" v-model="formData.id"></el-input>
          </el-form-item>
          <el-form-item label="类型名称:" prop="unitName" label-width="95px">
            <el-input placeholder="请输入" v-model="formData.typeName"></el-input>
          </el-form-item>
          <el-form-item label="类型编号:" prop="unitName" label-width="95px">
            <el-input placeholder="请输入" v-model="formData.typeCode"></el-input>
          </el-form-item>
          <el-form-item label=" ">
            <el-button type="primary" size="small" @click="lookFor()">查询</el-button>
            <el-button size="small" @click="reset('formData')">重置</el-button>
          </el-form-item>
        </el-form>
        <!-- 列表 -->
        <div class="list-wrap">
          <el-table v-loading.lock="isLoading" :data="tableData" stripe show-overflow-tooltip>
            <el-table-column label="ID" prop="id" show-overflow-tooltip></el-table-column>
            <el-table-column label="硬件类型" prop="typeName" show-overflow-tooltip></el-table-column>
            <el-table-column label="类型编号" prop="code" show-overflow-tooltip></el-table-column>
            <el-table-column label="父类型" prop="parentTypeName" show-overflow-tooltip></el-table-column>
            <el-table-column label="操作" show-overflow-tooltip align="center">
              <template slot-scope="scope">
                <el-link type="primary" @click="getParameter(scope.$index,scope.row)">删除</el-link>
                <el-link type="primary" @click="toDetail(scope.$index, scope.row)">编辑</el-link>
              </template>
            </el-table-column>
          </el-table>
          <Pagination
            :widgetInfo="widgetInfo"
            v-on:sonHandleCurrentChange="sonHandleCurrentChange"
          />
        </div>
      </div>
    </div>
    <el-dialog :title="dialogVisibleText" :visible.sync="dialogVisible" width="530px">
      <div class="dialog-body-diy-wrapper">
        <el-form
          class="dialog-form-style"
          :label-position="labelPosition"
          label-width="120px"
          ref="addOrEditForm"
        >
          <el-row>
            <el-col :span="12">
              <el-form-item
                label="硬件类型"
                :rules="{ required: true, message: '请输入硬件类型', trigger: 'blur' }"
              >
                <el-input></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="父类">
                <el-input></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-form-item label="备注">
            <el-input type="textarea" :rows="4"></el-input>
          </el-form-item>
        </el-form>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="dialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="dialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>
<script>
import Pagination from "~/components/Pagination";
export default {
  components: {
    Pagination
  },

  data() {
    return {
      dialogVisible: false, //新增修改弹出
      dialogDelVisible: false, //删除弹出框
      dialogVisibleText: "新增",
      labelPosition: "top",
      isLoading: false,
      formData: {}, //查询的formData
      tableData: [], //table查询结果
      loading: true,
      widgetInfo: {
        pageSize: 10,
        pageNo: 1,
        total: 0
      }
    };
  },
  mounted() {},
  computed: {},
  methods: {
    //新增
    addOrEditDiglog(type) {
      let that = this;
      that.dialogVisible = true;
      if (type == "new") {
        that.dialogVisibleText === "编辑";
      } else {
        that.dialogVisibleText === "修改";
      }
    },

    // 硬件类别管理的列表
    getHardwareTypePage() {
      const that = this;
      that.isLoading = true;
      that.$axios
        .$POST({
          api_name: "getHardwareTypePage",
          params: {
            id: that.formData.id,
            typeName: that.formData.typeName,
            typeCode: that.formData.typeCode,
            pageNo: that.widgetInfo.pageNo,
            pageSize: that.widgetInfo.pageSize
          }
        })
        .then(res => {
          if (res.data.code == "success") {
            that.isLoading = false;
            let data = res.data.data;
            that.tableData = data.rows;
            that.widgetInfo.total = data.total === null ? 0 : data.total;
          } else {
            that.tableData = [];
            that.widgetInfo.list = data.rows;
            that.widgetInfo.total = 0;
            console.log("没有数值。。。。。");
          }
        });
    },

    //删除
    deleteHardwareType() {},

    //分页
    sonHandleCurrentChange(widgetInfo) {
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      this.getHardwareTypePage();
    },
    reset(formName) {
      //重置
      this.formData = {};
      this.getHardwareTypePage();
    },
    lookFor() {
      //查询
      this.getHardwareTypePage();
    }
  }
};
</script>
<style lang="scss" scoped="scoped">
.add-btn-style {
  text-align: right;
  padding-right: 25px;
  box-sizing: border-box;
}
.list-wrap {
  //导航90px 面包屑64px 距离底部20px 面板标题65px 查询form表单76
  height: calc(100vh - 90px - 64px - 20px - 65px - 76px);
  overflow: hidden;
  .el-table {
    padding: 0;
    overflow: hidden;
    th {
      background: rgba(240, 243, 247, 1);
    }
    .el-table__body-wrapper {
      //导航90px 面包屑64px 距离底部20px 面板标题65px 查询form表单76 分页85 头部高度48px
      height: calc(100vh - 90px - 64px - 20px - 65px - 76px - 85px - 48px);
      overflow-y: auto;
    }
  }
}
</style>