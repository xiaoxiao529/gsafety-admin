<template>
  <div>
    <div class="Crumbs">
      <el-breadcrumb separator-class="el-icon-arrow-right">
        <el-breadcrumb-item>运营中心</el-breadcrumb-item>
        <el-breadcrumb-item>检测区域设置</el-breadcrumb-item>
      </el-breadcrumb>
    </div>
    <div class="main-wrap">
      <el-row class="location">
        <el-col :span="12">
          <h3>检测区域设置</h3>
        </el-col>
      </el-row>
      <div class="main-container">
        <!-- 列表 -->
        <div class="list-wrap">
          <el-table v-loading.lock="isLoading" :data="tableData" stripe show-overflow-tooltip>
            <el-table-column label="运营中心名称" prop="subCenterName" show-overflow-tooltip min-width="20%"></el-table-column>
            <el-table-column label="检测区域" prop="monitorOperatorNames" show-overflow-tooltip min-width="45%"></el-table-column>
            <el-table-column label="更新时间" prop="monitorTime" show-overflow-tooltip min-width="15%"></el-table-column>
            <el-table-column label="操作" show-overflow-tooltip align="center"  min-width="10%">
              <template slot-scope="scope">
                <el-link type="primary" @click="settingAreaHandal(scope.$index,scope.row)" >设置</el-link>
              </template>
            </el-table-column>
          </el-table>
          <Pagination
            :widgetInfo="widgetInfo"
            v-on:sonHandleCurrentChange="sonHandleCurrentChange"
          />
        </div>
      </div>
    </div>
<!--    设置弹框 -->
    <setting ref="setting" @loadData="queryOperatorOrgList('load')"></setting>
  </div>
</template>
<script>
  import Pagination from "~/components/Pagination";
  import Setting from "~/pages/detectionAreaSetting/setting";
  export default {
    components: {
      Setting,
      Pagination
    },
    data() {
      return {
        isLoading: false,
        tableData: [], //table查询结果
        loading: true,
        widgetInfo: {
          pageSize: 10,
          pageNo: 1,
          total: 0
        }
      };
    },
    mounted() {
      const that = this;

    },
    computed: {},
    methods: {
      /**
       * 系统检测区域设置的列表
       * @param pagenoFlag
       */
      queryOperatorOrgList(pagenoFlag) {
        const that = this;
        that.isLoading = true;
        if(pagenoFlag=='search'){
          that.widgetInfo.pageNo = 1;
        }
        that.$axios
          .$POST_NEW({
            api_name: "queryOperatorOrgList",
            params:{
              pageNo: that.widgetInfo.pageNo,
              pageSize: that.widgetInfo.pageSize
            }
          })
          .then(res => {
            if (res.data.code == "success") {
              that.isLoading = false;
              let data = res.data.data;
              that.tableData = data.rows;
              that.widgetInfo.total = data.total === null ? 0 : data.total;
            } else {
              that.isLoading = false;
              that.tableData = [];
              that.widgetInfo.list = res.data.rows;
              that.widgetInfo.total = 0;
              console.log("没有数值。。。。。");
            }
          });
      },

      /**
       * 分页
       * @param widgetInfo
       */
      sonHandleCurrentChange(widgetInfo) {
        this.widgetInfo.pageSize = widgetInfo.pageSize
          ? parseInt(widgetInfo.pageSize)
          : this.widgetInfo.pageSize;
        this.widgetInfo.pageNo = widgetInfo.pageNo
          ? parseInt(widgetInfo.pageNo)
          : this.widgetInfo.pageNo;
        this.queryOperatorOrgList('load');
      },
      /**
       * 点击设置出现设置弹框
       * @param index
       * @param row
       */
      settingAreaHandal(index,row){
        const that = this;
        that.$refs.setting.initSettingInfo(row);
      },

    }
  };
</script>
<style lang="scss" scoped="scoped">
  .add-btn-style {
    text-align: right;
    padding-right: 25px;
    box-sizing: border-box;
  }
  .hardware-form{
    padding: 20px 25px 0 25px;
  }
  .list-wrap {
    //导航90px 面包屑64px 距离底部20px 面板标题65px
    height: calc(100vh - 90px - 64px - 20px - 65px);
    overflow: hidden;
    /deep/.el-table {
      padding: 0;
      overflow: hidden;
      th {
        background: rgba(240, 243, 247, 1);
      }
      .el-table__body-wrapper {
        //导航90px 面包屑64px 距离底部20px 面板标题65px 分页85 头部高度48px
        height: calc(100vh - 90px - 64px - 20px - 65px - 85px - 48px);
        overflow-y: auto;
      }
    }
  }
  @media screen and (max-width: 1680px) {
    .list-wrap {
      //导航60px 面包屑64px 距离底部20px 面板标题65px
      height: calc(100vh - 60px - 64px - 20px - 65px);
      overflow: hidden;
      /deep/.el-table {
        padding: 0;
        overflow: hidden;
        th {
          background: rgba(240, 243, 247, 1);
        }
        .el-table__body-wrapper {
          //导航60px 面包屑64px 距离底部20px 面板标题65px 分页85 头部高度48px
          height: calc(100vh - 60px - 64px - 20px - 65px - 85px - 48px);
          overflow-y: auto;
        }
      }
    }
  }
</style>
